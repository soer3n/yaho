name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - name: check out code
        uses: actions/checkout@v1

      - name: lint Go code
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
          go get -u golang.org/x/lint/golint 
          golint -set_exit_status ./...

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v2
    - name: set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: build
      run: go build -v ./...

  test-unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v2
    - name: set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: test packages
      run: go test -v ./pkg/...

  test-k8s:
    strategy:
      fail-fast: false
      matrix:
        version:
        - v1.21.1
        - v1.20.7
        - v1.19.11
    runs-on: ubuntu-latest
    name: test-e2e-k8s-${{ matrix.version }}
    needs:
    - lint
    steps:
    - uses: actions/checkout@v2
    - name: set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: create k8s Kind cluster
      uses: helm/kind-action@v1.2.0
      with:
        node_image: kindest/node:${{ matrix.version }}
        cluster_name:  cluster-${{ matrix.version }}
    - name: test controllers
      run: go test -v ./controllers/...
  
  coverage:
    runs-on: ubuntu-latest
    needs:
    - test-unit
    - test-k8s
    steps:
    - uses: actions/checkout@v2
    - name: set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: create k8s Kind cluster
      uses: helm/kind-action@v1.2.0
      with:
        node_image: kindest/node:v1.20.7
    - name: run coverage
      run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
    - name: report coverage
      uses: codecov/codecov-action@v1
      with:
        token: 18c8c4a3-0fb0-44b5-a37d-8bcc9367aa7c
        file: ./coverage.txt
        fail_ci_if_error: true
