<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Usage on yaho</title><link>https://soer3n.github.io/yaho/usage/</link><description>Recent content in Usage on yaho</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://soer3n.github.io/yaho/usage/index.xml" rel="self" type="application/rss+xml"/><item><title>Respositories &amp; Charts</title><link>https://soer3n.github.io/yaho/usage/repos_charts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://soer3n.github.io/yaho/usage/repos_charts/</guid><description>There are two ways for managing repositories and charts. Either by configuring charts by repository or chart resource.
manage by repository resource Let&amp;rsquo;s deploy a basic repository resource at first.
--- apiVersion: yaho.soer3n.dev/v1alpha1 kind: Repository metadata: name: test-repo spec: name: test-repo url: https://soer3n.github.io/charts/testing_a charts: [] Nothing except the resource and indices for all charts found in downloaded index should be installed.
$ kubectl get repositories.yaho.soer3n.dev NAME GROUP SYNCED CHARTS AGE test-repo true 0 14s $ kubectl get charts.</description></item><item><title>Releases</title><link>https://soer3n.github.io/yaho/usage/releases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://soer3n.github.io/yaho/usage/releases/</guid><description>After installing needed repository and chart resources you can create a helm release.
Needed chart resources have to be present before creating a release resource.
--- apiVersion: yaho.soer3n.dev/v1alpha1 kind: Release metadata: name: test-release namespace: helm spec: name: test-release namespace: share config: helm-release-config repo: test-repo chart: testing version: 0.1.1 The release will be installed either into spec.namespace or if this field is not set into object.metadata.namespace.
$ kubectl get releases.yaho.soer3n.dev -n helm NAME GROUP REPO CHART VERSION SYNCED STATUS REVISION AGE test-release test-repo testing 0.</description></item></channel></rss>